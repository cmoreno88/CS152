Terminals unused in grammar

   UMINUS


State 5 conflicts: 1 shift/reduce


Grammar

    0 $accept: start_func $end

    1 start_func: functions

    2 functions: %empty
    3          | function functions

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    5 declarations: %empty
    6             | declaration SEMICOLON declarations

    7 declaration: identifier COLON INTEGER
    8            | identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   10 statements: statement SEMICOLON statements
   11           | statement SEMICOLON

   12 statement: vars ASSIGN expressions
   13          | IF bool-expr THEN statements ENDIF
   14          | IF bool-expr THEN statements ELSE statements ENDIF
   15          | WHILE bool-expr BEGINLOOP statements ENDLOOP
   16          | DO BEGINLOOP statements ENDLOOP WHILE bool-expr
   17          | FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP
   18          | READ vars
   19          | WRITE vars
   20          | CONTINUE
   21          | RETURN expressions

   22 vars: var COMMA vars
   23     | var

   24 var: identifier
   25    | identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   26    | identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

   27 comp: EQ
   28     | NEQ
   29     | LT
   30     | GT
   31     | LTE
   32     | GTE

   33 expressions: %empty
   34            | expression
   35            | expression COMMA expressions

   36 expression: multiplicative-expr
   37           | multiplicative-expr ADD expression
   38           | multiplicative-expr SUB expression

   39 bool-expr: relation-and-expr
   40          | relation-and-expr OR bool-expr

   41 relation-and-expr: relation-expr
   42                  | relation-expr AND relation-and-expr

   43 relation-expr: expression comp expression
   44              | TRUE
   45              | FALSE
   46              | identifier L_PAREN bool-expr R_PAREN
   47              | NOT expression comp expression
   48              | NOT TRUE
   49              | NOT FALSE
   50              | NOT identifier L_PAREN bool-expr R_PAREN

   51 multiplicative-expr: term
   52                    | term MULT multiplicative-expr
   53                    | term DIV multiplicative-expr
   54                    | term MOD multiplicative-expr

   55 term: var
   56     | SUB var
   57     | NUMBER
   58     | SUB NUMBER
   59     | L_PAREN expression R_PAREN
   60     | SUB L_PAREN expression R_PAREN
   61     | identifier L_PAREN expressions R_PAREN

   62 identifier: IDENT
   63           | IDENT COMMA identifier


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 62 63
NUMBER (259) 8 9 17 57 58
FUNCTION (260) 4
SEMICOLON (261) 4 6 10 11 17
TRUE (262) 44 48
FALSE (263) 45 49
RETURN (264) 21
BEGIN_PARAMS (265) 4
END_PARAMS (266) 4
BEGIN_LOCALS (267) 4
END_LOCALS (268) 4
BEGIN_BODY (269) 4
END_BODY (270) 4
INTEGER (271) 7 8 9
ARRAY (272) 8 9
OF (273) 8 9
IF (274) 13 14
THEN (275) 13 14
ENDIF (276) 13 14
ELSE (277) 14
WHILE (278) 15 16
DO (279) 16
FOR (280) 17
BEGINLOOP (281) 15 16 17
ENDLOOP (282) 15 16 17
CONTINUE (283) 20
READ (284) 18
WRITE (285) 19
COLON (286) 7 8 9
COMMA (287) 22 35 63
ASSIGN (288) 12 17
OR (289) 40
AND (290) 42
NOT (291) 47 48 49 50
LT (292) 29
LTE (293) 31
GT (294) 30
GTE (295) 32
EQ (296) 27
NEQ (297) 28
ADD (298) 37
SUB (299) 38 56 58 60
MULT (300) 52
DIV (301) 53
MOD (302) 54
UMINUS (303)
L_SQUARE_BRACKET (304) 8 9 25 26
R_SQUARE_BRACKET (305) 8 9 25 26
L_PAREN (306) 46 50 59 60 61
R_PAREN (307) 46 50 59 60 61


Nonterminals, with rules where they appear

$accept (53)
    on left: 0
start_func (54)
    on left: 1, on right: 0
functions (55)
    on left: 2 3, on right: 1 3
function (56)
    on left: 4, on right: 3
declarations (57)
    on left: 5 6, on right: 4 6
declaration (58)
    on left: 7 8 9, on right: 6
statements (59)
    on left: 10 11, on right: 4 10 13 14 15 16 17
statement (60)
    on left: 12 13 14 15 16 17 18 19 20 21, on right: 10 11
vars (61)
    on left: 22 23, on right: 12 17 18 19 22
var (62)
    on left: 24 25 26, on right: 22 23 55 56
comp (63)
    on left: 27 28 29 30 31 32, on right: 43 47
expressions (64)
    on left: 33 34 35, on right: 12 17 21 25 26 35 61
expression (65)
    on left: 36 37 38, on right: 34 35 37 38 43 47 59 60
bool-expr (66)
    on left: 39 40, on right: 13 14 15 16 17 40 46 50
relation-and-expr (67)
    on left: 41 42, on right: 39 40 42
relation-expr (68)
    on left: 43 44 45 46 47 48 49 50, on right: 41 42
multiplicative-expr (69)
    on left: 51 52 53 54, on right: 36 37 38 52 53 54
term (70)
    on left: 55 56 57 58 59 60 61, on right: 51 52 53 54
identifier (71)
    on left: 62 63, on right: 4 7 8 9 24 25 26 46 50 61 63


State 0

    0 $accept: . start_func $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    start_func  go to state 2
    functions   go to state 3
    function    go to state 4


State 1

    4 function: FUNCTION . identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    identifier  go to state 6


State 2

    0 $accept: start_func . $end

    $end  shift, and go to state 7


State 3

    1 start_func: functions .

    $default  reduce using rule 1 (start_func)


State 4

    3 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (functions)

    functions  go to state 8
    function   go to state 4


State 5

   62 identifier: IDENT .
   63           | IDENT . COMMA identifier

    COMMA  shift, and go to state 9

    COMMA     [reduce using rule 62 (identifier)]
    $default  reduce using rule 62 (identifier)


State 6

    4 function: FUNCTION identifier . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    SEMICOLON  shift, and go to state 10


State 7

    0 $accept: start_func $end .

    $default  accept


State 8

    3 functions: function functions .

    $default  reduce using rule 3 (functions)


State 9

   63 identifier: IDENT COMMA . identifier

    IDENT  shift, and go to state 5

    identifier  go to state 11


State 10

    4 function: FUNCTION identifier SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_PARAMS  shift, and go to state 12


State 11

   63 identifier: IDENT COMMA identifier .

    $default  reduce using rule 63 (identifier)


State 12

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 13
    declaration   go to state 14
    identifier    go to state 15


State 13

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    END_PARAMS  shift, and go to state 16


State 14

    6 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 17


State 15

    7 declaration: identifier . COLON INTEGER
    8            | identifier . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifier . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 18


State 16

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 17

    6 declarations: declaration SEMICOLON . declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 20
    declaration   go to state 14
    identifier    go to state 15


State 18

    7 declaration: identifier COLON . INTEGER
    8            | identifier COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifier COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 21
    ARRAY    shift, and go to state 22


State 19

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS . declarations END_LOCALS BEGIN_BODY statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 5 (declarations)

    declarations  go to state 23
    declaration   go to state 14
    identifier    go to state 15


State 20

    6 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 6 (declarations)


State 21

    7 declaration: identifier COLON INTEGER .

    $default  reduce using rule 7 (declaration)


State 22

    8 declaration: identifier COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifier COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 23

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations . END_LOCALS BEGIN_BODY statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

    8 declaration: identifier COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
    9            | identifier COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS . BEGIN_BODY statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

    8 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
    9            | identifier COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY . statements END_BODY

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 37
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 28

    8 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
    9            | identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 42
    L_SQUARE_BRACKET  shift, and go to state 43


State 29

   21 statement: RETURN . expressions

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 48
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 30

   13 statement: IF . bool-expr THEN statements ENDIF
   14          | IF . bool-expr THEN statements ELSE statements ENDIF

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    bool-expr            go to state 57
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 31

   15 statement: WHILE . bool-expr BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    bool-expr            go to state 61
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 32

   16 statement: DO . BEGINLOOP statements ENDLOOP WHILE bool-expr

    BEGINLOOP  shift, and go to state 62


State 33

   17 statement: FOR . vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    vars        go to state 63
    var         go to state 40
    identifier  go to state 41


State 34

   20 statement: CONTINUE .

    $default  reduce using rule 20 (statement)


State 35

   18 statement: READ . vars

    IDENT  shift, and go to state 5

    vars        go to state 64
    var         go to state 40
    identifier  go to state 41


State 36

   19 statement: WRITE . vars

    IDENT  shift, and go to state 5

    vars        go to state 65
    var         go to state 40
    identifier  go to state 41


State 37

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements . END_BODY

    END_BODY  shift, and go to state 66


State 38

   10 statements: statement . SEMICOLON statements
   11           | statement . SEMICOLON

    SEMICOLON  shift, and go to state 67


State 39

   12 statement: vars . ASSIGN expressions

    ASSIGN  shift, and go to state 68


State 40

   22 vars: var . COMMA vars
   23     | var .

    COMMA  shift, and go to state 69

    $default  reduce using rule 23 (vars)


State 41

   24 var: identifier .
   25    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   26    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 70

    $default  reduce using rule 24 (var)


State 42

    8 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 71


State 43

    9 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 72


State 44

   57 term: NUMBER .

    $default  reduce using rule 57 (term)


State 45

   56 term: SUB . var
   58     | SUB . NUMBER
   60     | SUB . L_PAREN expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 73
    L_PAREN  shift, and go to state 74

    var         go to state 75
    identifier  go to state 41


State 46

   59 term: L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 76
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 47

   55 term: var .

    $default  reduce using rule 55 (term)


State 48

   21 statement: RETURN expressions .

    $default  reduce using rule 21 (statement)


State 49

   34 expressions: expression .
   35            | expression . COMMA expressions

    COMMA  shift, and go to state 77

    $default  reduce using rule 34 (expressions)


State 50

   36 expression: multiplicative-expr .
   37           | multiplicative-expr . ADD expression
   38           | multiplicative-expr . SUB expression

    ADD  shift, and go to state 78
    SUB  shift, and go to state 79

    $default  reduce using rule 36 (expression)


State 51

   51 multiplicative-expr: term .
   52                    | term . MULT multiplicative-expr
   53                    | term . DIV multiplicative-expr
   54                    | term . MOD multiplicative-expr

    MULT  shift, and go to state 80
    DIV   shift, and go to state 81
    MOD   shift, and go to state 82

    $default  reduce using rule 51 (multiplicative-expr)


State 52

   24 var: identifier .
   25    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   26    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   61 term: identifier . L_PAREN expressions R_PAREN

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 83

    $default  reduce using rule 24 (var)


State 53

   44 relation-expr: TRUE .

    $default  reduce using rule 44 (relation-expr)


State 54

   45 relation-expr: FALSE .

    $default  reduce using rule 45 (relation-expr)


State 55

   47 relation-expr: NOT . expression comp expression
   48              | NOT . TRUE
   49              | NOT . FALSE
   50              | NOT . identifier L_PAREN bool-expr R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 84
    FALSE    shift, and go to state 85
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 86
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 87


State 56

   43 relation-expr: expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 94


State 57

   13 statement: IF bool-expr . THEN statements ENDIF
   14          | IF bool-expr . THEN statements ELSE statements ENDIF

    THEN  shift, and go to state 95


State 58

   39 bool-expr: relation-and-expr .
   40          | relation-and-expr . OR bool-expr

    OR  shift, and go to state 96

    $default  reduce using rule 39 (bool-expr)


State 59

   41 relation-and-expr: relation-expr .
   42                  | relation-expr . AND relation-and-expr

    AND  shift, and go to state 97

    $default  reduce using rule 41 (relation-and-expr)


State 60

   24 var: identifier .
   25    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   26    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   46 relation-expr: identifier . L_PAREN bool-expr R_PAREN
   61 term: identifier . L_PAREN expressions R_PAREN

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 98

    $default  reduce using rule 24 (var)


State 61

   15 statement: WHILE bool-expr . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 99


State 62

   16 statement: DO BEGINLOOP . statements ENDLOOP WHILE bool-expr

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 100
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 63

   17 statement: FOR vars . ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 101


State 64

   18 statement: READ vars .

    $default  reduce using rule 18 (statement)


State 65

   19 statement: WRITE vars .

    $default  reduce using rule 19 (statement)


State 66

    4 function: FUNCTION identifier SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCALS declarations END_LOCALS BEGIN_BODY statements END_BODY .

    $default  reduce using rule 4 (function)


State 67

   10 statements: statement SEMICOLON . statements
   11           | statement SEMICOLON .

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    $default  reduce using rule 11 (statements)

    statements  go to state 102
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 68

   12 statement: vars ASSIGN . expressions

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 103
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 69

   22 vars: var COMMA . vars

    IDENT  shift, and go to state 5

    vars        go to state 104
    var         go to state 40
    identifier  go to state 41


State 70

   25 var: identifier L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET
   26    | identifier L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 105
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 71

    8 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 8 (declaration)


State 72

    9 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 106


State 73

   58 term: SUB NUMBER .

    $default  reduce using rule 58 (term)


State 74

   60 term: SUB L_PAREN . expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 107
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 75

   56 term: SUB var .

    $default  reduce using rule 56 (term)


State 76

   59 term: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 108


State 77

   35 expressions: expression COMMA . expressions

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 109
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 78

   37 expression: multiplicative-expr ADD . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 110
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 79

   38 expression: multiplicative-expr SUB . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 111
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 80

   52 multiplicative-expr: term MULT . multiplicative-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    multiplicative-expr  go to state 112
    term                 go to state 51
    identifier           go to state 52


State 81

   53 multiplicative-expr: term DIV . multiplicative-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    multiplicative-expr  go to state 113
    term                 go to state 51
    identifier           go to state 52


State 82

   54 multiplicative-expr: term MOD . multiplicative-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    multiplicative-expr  go to state 114
    term                 go to state 51
    identifier           go to state 52


State 83

   61 term: identifier L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 115
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 84

   48 relation-expr: NOT TRUE .

    $default  reduce using rule 48 (relation-expr)


State 85

   49 relation-expr: NOT FALSE .

    $default  reduce using rule 49 (relation-expr)


State 86

   47 relation-expr: NOT expression . comp expression

    LT   shift, and go to state 88
    LTE  shift, and go to state 89
    GT   shift, and go to state 90
    GTE  shift, and go to state 91
    EQ   shift, and go to state 92
    NEQ  shift, and go to state 93

    comp  go to state 116


State 87

   24 var: identifier .
   25    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   26    | identifier . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET
   50 relation-expr: NOT identifier . L_PAREN bool-expr R_PAREN
   61 term: identifier . L_PAREN expressions R_PAREN

    L_SQUARE_BRACKET  shift, and go to state 70
    L_PAREN           shift, and go to state 117

    $default  reduce using rule 24 (var)


State 88

   29 comp: LT .

    $default  reduce using rule 29 (comp)


State 89

   31 comp: LTE .

    $default  reduce using rule 31 (comp)


State 90

   30 comp: GT .

    $default  reduce using rule 30 (comp)


State 91

   32 comp: GTE .

    $default  reduce using rule 32 (comp)


State 92

   27 comp: EQ .

    $default  reduce using rule 27 (comp)


State 93

   28 comp: NEQ .

    $default  reduce using rule 28 (comp)


State 94

   43 relation-expr: expression comp . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 118
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 95

   13 statement: IF bool-expr THEN . statements ENDIF
   14          | IF bool-expr THEN . statements ELSE statements ENDIF

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 119
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 96

   40 bool-expr: relation-and-expr OR . bool-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    bool-expr            go to state 120
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 97

   42 relation-and-expr: relation-expr AND . relation-and-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    relation-and-expr    go to state 121
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 98

   46 relation-expr: identifier L_PAREN . bool-expr R_PAREN
   61 term: identifier L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 115
    expression           go to state 122
    bool-expr            go to state 123
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 99

   15 statement: WHILE bool-expr BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 124
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 100

   16 statement: DO BEGINLOOP statements . ENDLOOP WHILE bool-expr

    ENDLOOP  shift, and go to state 125


State 101

   17 statement: FOR vars ASSIGN . NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    NUMBER  shift, and go to state 126


State 102

   10 statements: statement SEMICOLON statements .

    $default  reduce using rule 10 (statements)


State 103

   12 statement: vars ASSIGN expressions .

    $default  reduce using rule 12 (statement)


State 104

   22 vars: var COMMA vars .

    $default  reduce using rule 22 (vars)


State 105

   25 var: identifier L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET
   26    | identifier L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 106

    9 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 128


State 107

   60 term: SUB L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 129


State 108

   59 term: L_PAREN expression R_PAREN .

    $default  reduce using rule 59 (term)


State 109

   35 expressions: expression COMMA expressions .

    $default  reduce using rule 35 (expressions)


State 110

   37 expression: multiplicative-expr ADD expression .

    $default  reduce using rule 37 (expression)


State 111

   38 expression: multiplicative-expr SUB expression .

    $default  reduce using rule 38 (expression)


State 112

   52 multiplicative-expr: term MULT multiplicative-expr .

    $default  reduce using rule 52 (multiplicative-expr)


State 113

   53 multiplicative-expr: term DIV multiplicative-expr .

    $default  reduce using rule 53 (multiplicative-expr)


State 114

   54 multiplicative-expr: term MOD multiplicative-expr .

    $default  reduce using rule 54 (multiplicative-expr)


State 115

   61 term: identifier L_PAREN expressions . R_PAREN

    R_PAREN  shift, and go to state 130


State 116

   47 relation-expr: NOT expression comp . expression

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 131
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 117

   50 relation-expr: NOT identifier L_PAREN . bool-expr R_PAREN
   61 term: identifier L_PAREN . expressions R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 115
    expression           go to state 122
    bool-expr            go to state 132
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 118

   43 relation-expr: expression comp expression .

    $default  reduce using rule 43 (relation-expr)


State 119

   13 statement: IF bool-expr THEN statements . ENDIF
   14          | IF bool-expr THEN statements . ELSE statements ENDIF

    ENDIF  shift, and go to state 133
    ELSE   shift, and go to state 134


State 120

   40 bool-expr: relation-and-expr OR bool-expr .

    $default  reduce using rule 40 (bool-expr)


State 121

   42 relation-and-expr: relation-expr AND relation-and-expr .

    $default  reduce using rule 42 (relation-and-expr)


State 122

   34 expressions: expression .
   35            | expression . COMMA expressions
   43 relation-expr: expression . comp expression

    COMMA  shift, and go to state 77
    LT     shift, and go to state 88
    LTE    shift, and go to state 89
    GT     shift, and go to state 90
    GTE    shift, and go to state 91
    EQ     shift, and go to state 92
    NEQ    shift, and go to state 93

    $default  reduce using rule 34 (expressions)

    comp  go to state 94


State 123

   46 relation-expr: identifier L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 135


State 124

   15 statement: WHILE bool-expr BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 125

   16 statement: DO BEGINLOOP statements ENDLOOP . WHILE bool-expr

    WHILE  shift, and go to state 137


State 126

   17 statement: FOR vars ASSIGN NUMBER . SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 138


State 127

   25 var: identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .
   26    | identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET . L_SQUARE_BRACKET expressions R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 139

    $default  reduce using rule 25 (var)


State 128

    9 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 140


State 129

   60 term: SUB L_PAREN expression R_PAREN .

    $default  reduce using rule 60 (term)


State 130

   61 term: identifier L_PAREN expressions R_PAREN .

    $default  reduce using rule 61 (term)


State 131

   47 relation-expr: NOT expression comp expression .

    $default  reduce using rule 47 (relation-expr)


State 132

   50 relation-expr: NOT identifier L_PAREN bool-expr . R_PAREN

    R_PAREN  shift, and go to state 141


State 133

   13 statement: IF bool-expr THEN statements ENDIF .

    $default  reduce using rule 13 (statement)


State 134

   14 statement: IF bool-expr THEN statements ELSE . statements ENDIF

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 142
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 135

   46 relation-expr: identifier L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 46 (relation-expr)


State 136

   15 statement: WHILE bool-expr BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 15 (statement)


State 137

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE . bool-expr

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    bool-expr            go to state 143
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 138

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON . bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    TRUE     shift, and go to state 53
    FALSE    shift, and go to state 54
    NOT      shift, and go to state 55
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    var                  go to state 47
    expression           go to state 56
    bool-expr            go to state 144
    relation-and-expr    go to state 58
    relation-expr        go to state 59
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 60


State 139

   26 var: identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET . expressions R_SQUARE_BRACKET

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 145
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 140

    9 declaration: identifier COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 9 (declaration)


State 141

   50 relation-expr: NOT identifier L_PAREN bool-expr R_PAREN .

    $default  reduce using rule 50 (relation-expr)


State 142

   14 statement: IF bool-expr THEN statements ELSE statements . ENDIF

    ENDIF  shift, and go to state 146


State 143

   16 statement: DO BEGINLOOP statements ENDLOOP WHILE bool-expr .

    $default  reduce using rule 16 (statement)


State 144

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr . SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    SEMICOLON  shift, and go to state 147


State 145

   26 var: identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 148


State 146

   14 statement: IF bool-expr THEN statements ELSE statements ENDIF .

    $default  reduce using rule 14 (statement)


State 147

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON . vars ASSIGN expressions BEGINLOOP statements ENDLOOP

    IDENT  shift, and go to state 5

    vars        go to state 149
    var         go to state 40
    identifier  go to state 41


State 148

   26 var: identifier L_SQUARE_BRACKET expressions R_SQUARE_BRACKET L_SQUARE_BRACKET expressions R_SQUARE_BRACKET .

    $default  reduce using rule 26 (var)


State 149

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars . ASSIGN expressions BEGINLOOP statements ENDLOOP

    ASSIGN  shift, and go to state 150


State 150

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN . expressions BEGINLOOP statements ENDLOOP

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 44
    SUB      shift, and go to state 45
    L_PAREN  shift, and go to state 46

    $default  reduce using rule 33 (expressions)

    var                  go to state 47
    expressions          go to state 151
    expression           go to state 49
    multiplicative-expr  go to state 50
    term                 go to state 51
    identifier           go to state 52


State 151

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions . BEGINLOOP statements ENDLOOP

    BEGINLOOP  shift, and go to state 152


State 152

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP . statements ENDLOOP

    IDENT     shift, and go to state 5
    RETURN    shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36

    statements  go to state 153
    statement   go to state 38
    vars        go to state 39
    var         go to state 40
    identifier  go to state 41


State 153

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements . ENDLOOP

    ENDLOOP  shift, and go to state 154


State 154

   17 statement: FOR vars ASSIGN NUMBER SEMICOLON bool-expr SEMICOLON vars ASSIGN expressions BEGINLOOP statements ENDLOOP .

    $default  reduce using rule 17 (statement)
